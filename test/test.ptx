	.version 1.4
	.target sm_10, map_f64_to_f32
	// compiled with /usr/local/cuda-6.0/open64/lib//be
	// nvopencc 4.1 built on 2014-03-13

	//-----------------------------------------------------------
	// Compiling /tmp/tmpxft_00000d98_00000000-9_test.cpp3.i (/tmp/ccBI#.o84wWr)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:sm_10, Endian:little, Pointer Size:32
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"<command-line>"
	.file	2	"/tmp/tmpxft_00000d98_00000000-8_test.cudafe2.gpu"
	.file	3	"/usr/lib/gcc/i686-linux-gnu/4.6/include/stddef.h"
	.file	4	"/usr/local/cuda/bin/../targets/i386-linux/include/crt/device_runtime.h"
	.file	5	"/usr/local/cuda/bin/../targets/i386-linux/include/host_defines.h"
	.file	6	"/usr/local/cuda/bin/../targets/i386-linux/include/builtin_types.h"
	.file	7	"/usr/local/cuda/bin/../targets/i386-linux/include/device_types.h"
	.file	8	"/usr/local/cuda/bin/../targets/i386-linux/include/driver_types.h"
	.file	9	"/usr/local/cuda/bin/../targets/i386-linux/include/surface_types.h"
	.file	10	"/usr/local/cuda/bin/../targets/i386-linux/include/texture_types.h"
	.file	11	"/usr/local/cuda/bin/../targets/i386-linux/include/vector_types.h"
	.file	12	"/usr/local/cuda/bin/../targets/i386-linux/include/device_launch_parameters.h"
	.file	13	"/usr/local/cuda/bin/../targets/i386-linux/include/crt/storage_class.h"
	.file	14	"test.cu"
	.file	15	"/usr/local/cuda/bin/../targets/i386-linux/include/common_functions.h"
	.file	16	"/usr/local/cuda/bin/../targets/i386-linux/include/math_functions.h"
	.file	17	"/usr/local/cuda/bin/../targets/i386-linux/include/math_constants.h"
	.file	18	"/usr/local/cuda/bin/../targets/i386-linux/include/device_functions.h"
	.file	19	"/usr/local/cuda/bin/../targets/i386-linux/include/sm_11_atomic_functions.h"
	.file	20	"/usr/local/cuda/bin/../targets/i386-linux/include/sm_12_atomic_functions.h"
	.file	21	"/usr/local/cuda/bin/../targets/i386-linux/include/sm_13_double_functions.h"
	.file	22	"/usr/local/cuda/bin/../targets/i386-linux/include/sm_20_atomic_functions.h"
	.file	23	"/usr/local/cuda/bin/../targets/i386-linux/include/sm_32_atomic_functions.h"
	.file	24	"/usr/local/cuda/bin/../targets/i386-linux/include/sm_35_atomic_functions.h"
	.file	25	"/usr/local/cuda/bin/../targets/i386-linux/include/sm_20_intrinsics.h"
	.file	26	"/usr/local/cuda/bin/../targets/i386-linux/include/sm_30_intrinsics.h"
	.file	27	"/usr/local/cuda/bin/../targets/i386-linux/include/sm_32_intrinsics.h"
	.file	28	"/usr/local/cuda/bin/../targets/i386-linux/include/sm_35_intrinsics.h"
	.file	29	"/usr/local/cuda/bin/../targets/i386-linux/include/surface_functions.h"
	.file	30	"/usr/local/cuda/bin/../targets/i386-linux/include/texture_fetch_functions.h"
	.file	31	"/usr/local/cuda/bin/../targets/i386-linux/include/texture_indirect_functions.h"
	.file	32	"/usr/local/cuda/bin/../targets/i386-linux/include/surface_indirect_functions.h"
	.file	33	"/usr/local/cuda/bin/../targets/i386-linux/include/math_functions_dbl_ptx1.h"

	.tex .u32 tex;

	.entry helloWorld (
		.param .u32 __cudaparm_helloWorld_data3,
		.param .u32 __cudaparm_helloWorld_width)
	{
	.reg .u16 %rh<6>;
	.reg .u32 %r<13>;
	.reg .f32 %f<85>;
	.loc	14	9	0
$LDWbegin_helloWorld:
	.loc	14	52	0
	mov.u16 	%rh1, %ctaid.x;
	mov.u16 	%rh2, %ntid.x;
	mul.wide.u16 	%r1, %rh1, %rh2;
	mov.u16 	%rh3, %ctaid.y;
	mov.u16 	%rh4, %ntid.y;
	mul.wide.u16 	%r2, %rh3, %rh4;
	cvt.u32.u16 	%r3, %tid.x;
	add.u32 	%r4, %r3, %r1;
	cvt.u32.u16 	%r5, %tid.y;
	add.u32 	%r6, %r5, %r2;
	cvt.rn.f32.u32 	%f1, %r4;
	cvt.rn.f32.u32 	%f2, %r6;
	mov.f32 	%f3, %f1;
	mov.f32 	%f4, %f2;
	mov.f32 	%f5, 0f00000000;     	// 0
	mov.f32 	%f6, %f5;
	mov.f32 	%f7, 0f00000000;     	// 0
	mov.f32 	%f8, %f7;
	tex.3d.v4.f32.f32 {%f9,%f10,%f11,%f12},[tex,{%f3,%f4,%f6,%f8}];
	mov.f32 	%f13, %f9;
	mul.lo.u32 	%r7, %r6, 2;
	add.u32 	%r8, %r4, %r7;
	mul.lo.u32 	%r9, %r8, 4;
	ld.param.u32 	%r10, [__cudaparm_helloWorld_data3];
	add.u32 	%r11, %r10, %r9;
	st.global.f32 	[%r11+0], %f13;
	mov.f32 	%f14, %f1;
	mov.f32 	%f15, %f2;
	mov.f32 	%f16, 0f3f800000;    	// 1
	mov.f32 	%f17, %f16;
	mov.f32 	%f18, 0f00000000;    	// 0
	mov.f32 	%f19, %f18;
	tex.3d.v4.f32.f32 {%f20,%f21,%f22,%f23},[tex,{%f14,%f15,%f17,%f19}];
	mov.f32 	%f13, %f20;
	st.global.f32 	[%r11+16], %f13;
	mov.f32 	%f24, %f1;
	mov.f32 	%f25, %f2;
	mov.f32 	%f26, 0f40000000;    	// 2
	mov.f32 	%f27, %f26;
	mov.f32 	%f28, 0f00000000;    	// 0
	mov.f32 	%f29, %f28;
	tex.3d.v4.f32.f32 {%f30,%f31,%f32,%f33},[tex,{%f24,%f25,%f27,%f29}];
	mov.f32 	%f13, %f30;
	st.global.f32 	[%r11+32], %f13;
	mov.f32 	%f34, %f1;
	mov.f32 	%f35, %f2;
	mov.f32 	%f36, 0f40400000;    	// 3
	mov.f32 	%f37, %f36;
	mov.f32 	%f38, 0f00000000;    	// 0
	mov.f32 	%f39, %f38;
	tex.3d.v4.f32.f32 {%f40,%f41,%f42,%f43},[tex,{%f34,%f35,%f37,%f39}];
	mov.f32 	%f13, %f40;
	st.global.f32 	[%r11+48], %f13;
	mov.f32 	%f44, %f1;
	mov.f32 	%f45, %f2;
	mov.f32 	%f46, 0f40800000;    	// 4
	mov.f32 	%f47, %f46;
	mov.f32 	%f48, 0f00000000;    	// 0
	mov.f32 	%f49, %f48;
	tex.3d.v4.f32.f32 {%f50,%f51,%f52,%f53},[tex,{%f44,%f45,%f47,%f49}];
	mov.f32 	%f13, %f50;
	st.global.f32 	[%r11+64], %f13;
	mov.f32 	%f54, %f1;
	mov.f32 	%f55, %f2;
	mov.f32 	%f56, 0f40a00000;    	// 5
	mov.f32 	%f57, %f56;
	mov.f32 	%f58, 0f00000000;    	// 0
	mov.f32 	%f59, %f58;
	tex.3d.v4.f32.f32 {%f60,%f61,%f62,%f63},[tex,{%f54,%f55,%f57,%f59}];
	mov.f32 	%f13, %f60;
	st.global.f32 	[%r11+80], %f13;
	mov.f32 	%f64, %f1;
	mov.f32 	%f65, %f2;
	mov.f32 	%f66, 0f40c00000;    	// 6
	mov.f32 	%f67, %f66;
	mov.f32 	%f68, 0f00000000;    	// 0
	mov.f32 	%f69, %f68;
	tex.3d.v4.f32.f32 {%f70,%f71,%f72,%f73},[tex,{%f64,%f65,%f67,%f69}];
	mov.f32 	%f13, %f70;
	st.global.f32 	[%r11+96], %f13;
	mov.f32 	%f74, %f1;
	mov.f32 	%f75, %f2;
	mov.f32 	%f76, 0f40e00000;    	// 7
	mov.f32 	%f77, %f76;
	mov.f32 	%f78, 0f00000000;    	// 0
	mov.f32 	%f79, %f78;
	tex.3d.v4.f32.f32 {%f80,%f81,%f82,%f83},[tex,{%f74,%f75,%f77,%f79}];
	mov.f32 	%f13, %f80;
	st.global.f32 	[%r11+112], %f13;
	.loc	14	55	0
	exit;
$LDWend_helloWorld:
	} // helloWorld
	.tex .u32 texture_float_1D;

